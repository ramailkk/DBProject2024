{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ram_k\\\\CodeProjects\\\\DatabaseProject-MovieManagement\\\\frontend2\\\\src\\\\components\\\\PagesJS\\\\SelectedMemberContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedMemberContext = /*#__PURE__*/createContext();\nexport const SelectedMemberProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedMember, setSelectedMember] = useState(null);\n  const location = useLocation(); // Get the current route\n\n  // Reset selectedMember whenever the location changes\n  useEffect(() => {\n    setSelectedMember(null);\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(SelectedMemberContext.Provider, {\n    value: {\n      selectedMember,\n      setSelectedMember\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectedMemberProvider, \"grjhseX/qt1LDorDnM3kgUp/wyc=\", false, function () {\n  return [useLocation];\n});\n_c = SelectedMemberProvider;\nvar _c;\n$RefreshReg$(_c, \"SelectedMemberProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useLocation","jsxDEV","_jsxDEV","SelectedMemberContext","SelectedMemberProvider","children","_s","selectedMember","setSelectedMember","location","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ram_k/CodeProjects/DatabaseProject-MovieManagement/frontend2/src/components/PagesJS/SelectedMemberContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport const SelectedMemberContext = createContext();\r\n\r\nexport const SelectedMemberProvider = ({ children }) => {\r\n  const [selectedMember, setSelectedMember] = useState(null);\r\n  const location = useLocation(); // Get the current route\r\n\r\n  // Reset selectedMember whenever the location changes\r\n  useEffect(() => {\r\n    setSelectedMember(null);\r\n  }, [location]);\r\n\r\n  return (\r\n    <SelectedMemberContext.Provider value={{ selectedMember, setSelectedMember }}>\r\n      {children}\r\n    </SelectedMemberContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,qBAAqB,gBAAGN,aAAa,CAAC,CAAC;AAEpD,OAAO,MAAMO,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACdS,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,oBACEP,OAAA,CAACC,qBAAqB,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ,cAAc;MAAEC;IAAkB,CAAE;IAAAH,QAAA,EAC1EA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAErC,CAAC;AAACT,EAAA,CAdWF,sBAAsB;EAAA,QAEhBJ,WAAW;AAAA;AAAAgB,EAAA,GAFjBZ,sBAAsB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
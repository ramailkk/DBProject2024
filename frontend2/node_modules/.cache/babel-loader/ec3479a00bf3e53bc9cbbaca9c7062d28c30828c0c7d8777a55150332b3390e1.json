{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ram_k\\\\CodeProjects\\\\DatabaseProject-MovieManagement\\\\frontend2\\\\src\\\\components\\\\PagesJS\\\\SelectedMemberContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectedMemberContext = /*#__PURE__*/createContext();\nexport const SelectedMemberProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedMember, setSelectedMember] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleNavigation = e => {\n      const currentPath = location.pathname;\n      const targetPath = e.target.getAttribute('href');\n      if (currentPath === '/films' && targetPath === '/films') {\n        // Reset context if clicking on the \"films\" link while already on \"/films\"\n        setSelectedMember(null);\n      } else if (!targetPath.startsWith('/films') && !targetPath.startsWith('/filmonly')) {\n        // Reset context for navigation to other routes\n        setSelectedMember(null);\n      }\n    };\n\n    // Attach listener for link clicks\n    document.body.addEventListener('click', handleNavigation);\n    return () => {\n      // Clean up listener on unmount\n      document.body.removeEventListener('click', handleNavigation);\n    };\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(SelectedMemberContext.Provider, {\n    value: {\n      selectedMember,\n      setSelectedMember\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectedMemberProvider, \"ATWxrEkn7iCOzlnZT1qNLWMoZPQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SelectedMemberProvider;\nexport const useSelectedMember = () => {\n  _s2();\n  return useContext(SelectedMemberContext);\n};\n_s2(useSelectedMember, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SelectedMemberProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","SelectedMemberContext","SelectedMemberProvider","children","_s","selectedMember","setSelectedMember","location","navigate","handleNavigation","e","currentPath","pathname","targetPath","target","getAttribute","startsWith","document","body","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSelectedMember","_s2","$RefreshReg$"],"sources":["C:/Users/Ram_k/CodeProjects/DatabaseProject-MovieManagement/frontend2/src/components/PagesJS/SelectedMemberContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst SelectedMemberContext = createContext();\r\n\r\nexport const SelectedMemberProvider = ({ children }) => {\r\n  const [selectedMember, setSelectedMember] = useState(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const handleNavigation = (e) => {\r\n      const currentPath = location.pathname;\r\n      const targetPath = e.target.getAttribute('href');\r\n\r\n      if (currentPath === '/films' && targetPath === '/films') {\r\n        // Reset context if clicking on the \"films\" link while already on \"/films\"\r\n        setSelectedMember(null);\r\n      } else if (\r\n        !targetPath.startsWith('/films') &&\r\n        !targetPath.startsWith('/filmonly')\r\n      ) {\r\n        // Reset context for navigation to other routes\r\n        setSelectedMember(null);\r\n      }\r\n    };\r\n\r\n    // Attach listener for link clicks\r\n    document.body.addEventListener('click', handleNavigation);\r\n\r\n    return () => {\r\n      // Clean up listener on unmount\r\n      document.body.removeEventListener('click', handleNavigation);\r\n    };\r\n  }, [location]);\r\n\r\n  return (\r\n    <SelectedMemberContext.Provider value={{ selectedMember, setSelectedMember }}>\r\n      {children}\r\n    </SelectedMemberContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSelectedMember = () => useContext(SelectedMemberContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,qBAAqB,gBAAGR,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMS,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAIC,CAAC,IAAK;MAC9B,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,QAAQ;MACrC,MAAMC,UAAU,GAAGH,CAAC,CAACI,MAAM,CAACC,YAAY,CAAC,MAAM,CAAC;MAEhD,IAAIJ,WAAW,KAAK,QAAQ,IAAIE,UAAU,KAAK,QAAQ,EAAE;QACvD;QACAP,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,MAAM,IACL,CAACO,UAAU,CAACG,UAAU,CAAC,QAAQ,CAAC,IAChC,CAACH,UAAU,CAACG,UAAU,CAAC,WAAW,CAAC,EACnC;QACA;QACAV,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF,CAAC;;IAED;IACAW,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAEV,gBAAgB,CAAC;IAEzD,OAAO,MAAM;MACX;MACAQ,QAAQ,CAACC,IAAI,CAACE,mBAAmB,CAAC,OAAO,EAAEX,gBAAgB,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACEP,OAAA,CAACC,qBAAqB,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,cAAc;MAAEC;IAAkB,CAAE;IAAAH,QAAA,EAC1EA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAErC,CAAC;AAACtB,EAAA,CApCWF,sBAAsB;EAAA,QAEhBL,WAAW,EACXC,WAAW;AAAA;AAAA6B,EAAA,GAHjBzB,sBAAsB;AAsCnC,OAAO,MAAM0B,iBAAiB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACO,qBAAqB,CAAC;AAAA;AAAC4B,GAAA,CAA5DD,iBAAiB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
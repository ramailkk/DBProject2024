{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ram_k\\\\CodeProjects\\\\DatabaseProject-MovieManagement\\\\frontend2\\\\src\\\\components\\\\PagesJS\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport '../StyleCSS/Dashboard.css';\n// import { useSelectedMember } from './SelectedMemberContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  // useEffect(() => {\n  //     fetch(`http://localhost:3001/api/recentmovies/`, {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     })\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         console.log(data.data);\n  //         setFilms(data.data);\n  //       })\n  //       .catch((error) => console.error(\"Error fetching search results:\", error));\n  //   }, [selectedMember]);\n\n  const [dashboard_recent_movies, setRecent_movies] = useState([]);\n  const [favourite_movies, setFavourite_movies] = useState([]);\n  function type_Movies(api, setArray) {\n    fetch(`http://localhost:3001/api/${api}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data.data);\n      setArray(data.data);\n    }).catch(error => console.error(\"Error fetching search results:\", error));\n  }\n  const popularMovies = Array(5).fill(0); // Replace with actual data if available\n  const newMovies = Array(5).fill(0); // Replace with actual data if available\n  const suggestedMovies = Array(5).fill(0); // Replace with actual data if available\n\n  function getgridMovies(array) {\n    return array.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid__category-child\",\n      children: [\"Movie \", index + 1]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-all\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-grid-heading\",\n        children: \"Popular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"dashboard-grid-headingline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid-category popular-movies\",\n        children: getgridMovies(popularMovies)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-grid-heading\",\n        children: \"New movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"dashboard-grid-headingline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid-category recent-movies\",\n        children: getgridMovies(newMovies)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-grid-heading\",\n        children: \"Suggested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"dashboard-grid-headingline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid-category suggested-movies\",\n        children: getgridMovies(suggestedMovies)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n}\n_s(Dashboard, \"FYtJW0XSx4ELUu30qS4fHCHH1cU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Dashboard","_s","dashboard_recent_movies","setRecent_movies","useState","favourite_movies","setFavourite_movies","type_Movies","api","setArray","fetch","method","headers","then","response","json","data","console","log","catch","error","popularMovies","Array","fill","newMovies","suggestedMovies","getgridMovies","array","map","_","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ram_k/CodeProjects/DatabaseProject-MovieManagement/frontend2/src/components/PagesJS/Dashboard.js"],"sourcesContent":["import '../StyleCSS/Dashboard.css';\r\n// import { useSelectedMember } from './SelectedMemberContext.js';\r\nfunction Dashboard() {\r\n    // useEffect(() => {\r\n    //     fetch(`http://localhost:3001/api/recentmovies/`, {\r\n    //       method: \"GET\",\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //       },\r\n    //     })\r\n    //       .then((response) => response.json())\r\n    //       .then((data) => {\r\n    //         console.log(data.data);\r\n    //         setFilms(data.data);\r\n    //       })\r\n    //       .catch((error) => console.error(\"Error fetching search results:\", error));\r\n    //   }, [selectedMember]);\r\n\r\n\r\n    const [dashboard_recent_movies, setRecent_movies] = useState([]);\r\n    const [favourite_movies,setFavourite_movies] = useState([]);\r\n\r\n    function type_Movies(api,setArray){\r\n        fetch(`http://localhost:3001/api/${api}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n            console.log(data.data);\r\n            setArray(data.data);\r\n            })\r\n            .catch((error) => console.error(\"Error fetching search results:\", error));\r\n    }\r\n    \r\n    const popularMovies = Array(5).fill(0); // Replace with actual data if available\r\n    const newMovies = Array(5).fill(0); // Replace with actual data if available\r\n    const suggestedMovies = Array(5).fill(0); // Replace with actual data if available\r\n\r\n    function getgridMovies(array) {\r\n        return array.map((_, index) => (\r\n            <div key={index} className=\"dashboard-grid__category-child\">Movie {index + 1}</div>\r\n        ));\r\n    }\r\n\r\n    return(<div className='dashboard-all'>\r\n    <div className='dashboard-grid'>\r\n\r\n        {/* Popular Movies Grid */}\r\n        <h1 className='dashboard-grid-heading'>Popular</h1>\r\n        <hr className='dashboard-grid-headingline'></hr>\r\n        <div className='dashboard-grid-category popular-movies'>{getgridMovies(popularMovies)}</div>\r\n\r\n        {/* Recent Movies Grid */}\r\n        <h1 className='dashboard-grid-heading'>New movies</h1>\r\n        <hr className='dashboard-grid-headingline'></hr>\r\n        <div className='dashboard-grid-category recent-movies'>{getgridMovies(newMovies)}</div>\r\n        \r\n        {/* Suggested Movies Grid */}\r\n        <h1 className='dashboard-grid-heading'>Suggested</h1>\r\n        <hr className='dashboard-grid-headingline'></hr>\r\n        <div className='dashboard-grid-category suggested-movies'>{getgridMovies(suggestedMovies)}</div>\r\n    </div>\r\n    </div>)\r\n}\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
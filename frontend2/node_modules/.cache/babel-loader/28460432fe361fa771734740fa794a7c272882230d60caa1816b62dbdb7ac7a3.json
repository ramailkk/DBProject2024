{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ram_k\\\\CodeProjects\\\\DatabaseProject-MovieManagement\\\\frontend2\\\\src\\\\components\\\\PagesJS\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useFilm } from './FilmContext.js';\nimport '../StyleCSS/Dashboard.css';\n// import { useSelectedMember } from './SelectedMemberContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  // useEffect(() => {\n  //     fetch(`http://localhost:3001/api/recentmovies/`, {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     })\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         console.log(data.data);\n  //         setFilms(data.data);\n  //       })\n  //       .catch((error) => console.error(\"Error fetching search results:\", error));\n  //   }, [selectedMember]);\n\n  const {\n    setSelectedFilm\n  } = useFilm();\n  function type_Movies(api, setArray) {\n    fetch(`http://localhost:3001/api/${api}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data.data);\n      setArray(data.data);\n    }).catch(error => console.error(\"Error fetching search results:\", error));\n  }\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [newMovies, setNewMovies] = useState([]);\n  function getgridMovies(array) {\n    return array.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid__category-child\",\n      children: [\"Movie \", index + 1]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this));\n  }\n  function getgridMovies(array) {\n    console.log(array);\n    return array === null || array === void 0 ? void 0 : array.map((item, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/filmonly`,\n      onClick: () => setSelectedFilm(item),\n      className: \"dashboard-grid__category-child\",\n      style: {\n        backgroundImage: `url(data:image/jpeg;base64,${item.moviePicture})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        display: 'flex',\n        //   flexDirection: 'column',\n        justifyContent: 'flex-end',\n        textDecoration: 'none'\n      }\n    }, item.movieID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this));\n  }\n  useEffect(() => {\n    type_Movies(`recentmovies`, setNewMovies);\n    type_Movies(`popularmovies`, setPopularMovies);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-all\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-grid-heading\",\n        children: \"Popular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"dashboard-grid-headingline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid-category popular-movies\",\n        children: getgridMovies(popularMovies)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-grid-heading\",\n        children: \"New movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"dashboard-grid-headingline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid-category recent-movies\",\n        children: getgridMovies(newMovies)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 12\n  }, this);\n}\n_s(Dashboard, \"2WMA1L+9BB8ALMIFauLcaExeOPI=\", false, function () {\n  return [useFilm];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Link","useNavigate","useState","useEffect","useFilm","jsxDEV","_jsxDEV","Dashboard","_s","setSelectedFilm","type_Movies","api","setArray","fetch","method","headers","then","response","json","data","console","log","catch","error","popularMovies","setPopularMovies","newMovies","setNewMovies","getgridMovies","array","map","_","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","to","onClick","style","backgroundImage","moviePicture","backgroundSize","backgroundPosition","display","justifyContent","textDecoration","movieID","_c","$RefreshReg$"],"sources":["C:/Users/Ram_k/CodeProjects/DatabaseProject-MovieManagement/frontend2/src/components/PagesJS/Dashboard.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState , useEffect } from \"react\";\r\nimport { useFilm } from './FilmContext.js';\r\nimport '../StyleCSS/Dashboard.css';\r\n// import { useSelectedMember } from './SelectedMemberContext.js';\r\nfunction Dashboard() {\r\n    // useEffect(() => {\r\n    //     fetch(`http://localhost:3001/api/recentmovies/`, {\r\n    //       method: \"GET\",\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //       },\r\n    //     })\r\n    //       .then((response) => response.json())\r\n    //       .then((data) => {\r\n    //         console.log(data.data);\r\n    //         setFilms(data.data);\r\n    //       })\r\n    //       .catch((error) => console.error(\"Error fetching search results:\", error));\r\n    //   }, [selectedMember]);\r\n\r\n    const { setSelectedFilm } = useFilm();\r\n\r\n\r\n    function type_Movies(api,setArray){\r\n        fetch(`http://localhost:3001/api/${api}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n            console.log(data.data);\r\n            setArray(data.data);\r\n            })\r\n            .catch((error) => console.error(\"Error fetching search results:\", error));\r\n    }\r\n    \r\n    const [popularMovies, setPopularMovies] = useState([]);\r\n    const [newMovies, setNewMovies] = useState([]);\r\n\r\n\r\n\r\n\r\n    function getgridMovies(array) {\r\n        return array.map((_, index) => (\r\n            <div key={index} className=\"dashboard-grid__category-child\">Movie {index + 1}</div>\r\n        ));\r\n    }\r\n    function getgridMovies(array) {\r\n        console.log(array);\r\n        return array?.map((item, index) => (\r\n            <Link\r\n                to={`/filmonly`}\r\n                key={item.movieID}\r\n                onClick={() => setSelectedFilm(item)}\r\n                className=\"dashboard-grid__category-child\"\r\n                style={{\r\n                  backgroundImage: `url(data:image/jpeg;base64,${item.moviePicture})`,\r\n                  backgroundSize: 'cover',  \r\n                  backgroundPosition: 'center',\r\n                  display: 'flex',\r\n                //   flexDirection: 'column',\r\n                  justifyContent: 'flex-end',\r\n                  textDecoration: 'none',\r\n                }}\r\n              ></Link>\r\n        ));\r\n    }\r\n\r\n    useEffect(() => {\r\n        type_Movies(`recentmovies`,setNewMovies);\r\n        type_Movies(`popularmovies`,setPopularMovies);\r\n      }, []);\r\n\r\n    return(<div className='dashboard-all'>\r\n    <div className='dashboard-grid'>\r\n\r\n        {/* Popular Movies Grid */}\r\n        <h1 className='dashboard-grid-heading'>Popular</h1>\r\n        <hr className='dashboard-grid-headingline'></hr>\r\n        <div className='dashboard-grid-category popular-movies'>{getgridMovies(popularMovies)}</div>\r\n\r\n        {/* Recent Movies Grid */}\r\n        <h1 className='dashboard-grid-heading'>New movies</h1>\r\n        <hr className='dashboard-grid-headingline'></hr>\r\n        <div className='dashboard-grid-category recent-movies'>{getgridMovies(newMovies)}</div>\r\n        \r\n        {/* Suggested Movies Grid\r\n        <h1 className='dashboard-grid-heading'>Suggested</h1>\r\n        <hr className='dashboard-grid-headingline'></hr>\r\n        <div className='dashboard-grid-category suggested-movies'>{getgridMovies(suggestedMovies)}</div> */}\r\n        \r\n    </div>\r\n    </div>)\r\n}\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
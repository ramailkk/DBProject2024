{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ram_k\\\\CodeProjects\\\\DatabaseProject-MovieManagement\\\\frontend2\\\\src\\\\components\\\\PagesJS\\\\SelectedMemberContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectedMemberContext = /*#__PURE__*/createContext();\nexport const SelectedMemberProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedMember, setSelectedMember] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const handleNavigation = e => {\n      var _e$target$getAttribut, _e$target;\n      const targetPath = (_e$target$getAttribut = (_e$target = e.target).getAttribute) === null || _e$target$getAttribut === void 0 ? void 0 : _e$target$getAttribut.call(_e$target, 'href'); // Safely retrieve 'href'\n\n      if (targetPath) {\n        if (location.pathname === '/films' && targetPath === '/films') {\n          // Reset context if clicking on the \"films\" link while already on \"/films\"\n          setSelectedMember(null);\n        } else if (!targetPath.startsWith('/films') && !targetPath.startsWith('/filmonly')) {\n          // Reset context for navigation to other routes\n          setSelectedMember(null);\n        }\n      }\n    };\n\n    // Attach listener for link clicks\n    document.body.addEventListener('click', handleNavigation);\n    return () => {\n      // Clean up listener on unmount\n      document.body.removeEventListener('click', handleNavigation);\n    };\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(SelectedMemberContext.Provider, {\n    value: {\n      selectedMember,\n      setSelectedMember\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectedMemberProvider, \"grjhseX/qt1LDorDnM3kgUp/wyc=\", false, function () {\n  return [useLocation];\n});\n_c = SelectedMemberProvider;\nexport const useSelectedMember = () => {\n  _s2();\n  return useContext(SelectedMemberContext);\n};\n_s2(useSelectedMember, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SelectedMemberProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useLocation","jsxDEV","_jsxDEV","SelectedMemberContext","SelectedMemberProvider","children","_s","selectedMember","setSelectedMember","location","handleNavigation","e","_e$target$getAttribut","_e$target","targetPath","target","getAttribute","call","pathname","startsWith","document","body","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSelectedMember","_s2","$RefreshReg$"],"sources":["C:/Users/Ram_k/CodeProjects/DatabaseProject-MovieManagement/frontend2/src/components/PagesJS/SelectedMemberContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst SelectedMemberContext = createContext();\r\n\r\nexport const SelectedMemberProvider = ({ children }) => {\r\n  const [selectedMember, setSelectedMember] = useState(null);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const handleNavigation = (e) => {\r\n      const targetPath = e.target.getAttribute?.('href'); // Safely retrieve 'href'\r\n\r\n      if (targetPath) {\r\n        if (location.pathname === '/films' && targetPath === '/films') {\r\n          // Reset context if clicking on the \"films\" link while already on \"/films\"\r\n          setSelectedMember(null);\r\n        } else if (\r\n          !targetPath.startsWith('/films') &&\r\n          !targetPath.startsWith('/filmonly')\r\n        ) {\r\n          // Reset context for navigation to other routes\r\n          setSelectedMember(null);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Attach listener for link clicks\r\n    document.body.addEventListener('click', handleNavigation);\r\n\r\n    return () => {\r\n      // Clean up listener on unmount\r\n      document.body.removeEventListener('click', handleNavigation);\r\n    };\r\n  }, [location]);\r\n\r\n  return (\r\n    <SelectedMemberContext.Provider value={{ selectedMember, setSelectedMember }}>\r\n      {children}\r\n    </SelectedMemberContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSelectedMember = () => useContext(SelectedMemberContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,qBAAqB,gBAAGP,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMQ,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;MAAA,IAAAC,qBAAA,EAAAC,SAAA;MAC9B,MAAMC,UAAU,IAAAF,qBAAA,GAAG,CAAAC,SAAA,GAAAF,CAAC,CAACI,MAAM,EAACC,YAAY,cAAAJ,qBAAA,uBAArBA,qBAAA,CAAAK,IAAA,CAAAJ,SAAA,EAAwB,MAAM,CAAC,CAAC,CAAC;;MAEpD,IAAIC,UAAU,EAAE;QACd,IAAIL,QAAQ,CAACS,QAAQ,KAAK,QAAQ,IAAIJ,UAAU,KAAK,QAAQ,EAAE;UAC7D;UACAN,iBAAiB,CAAC,IAAI,CAAC;QACzB,CAAC,MAAM,IACL,CAACM,UAAU,CAACK,UAAU,CAAC,QAAQ,CAAC,IAChC,CAACL,UAAU,CAACK,UAAU,CAAC,WAAW,CAAC,EACnC;UACA;UACAX,iBAAiB,CAAC,IAAI,CAAC;QACzB;MACF;IACF,CAAC;;IAED;IACAY,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAEZ,gBAAgB,CAAC;IAEzD,OAAO,MAAM;MACX;MACAU,QAAQ,CAACC,IAAI,CAACE,mBAAmB,CAAC,OAAO,EAAEb,gBAAgB,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEP,OAAA,CAACC,qBAAqB,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,cAAc;MAAEC;IAAkB,CAAE;IAAAH,QAAA,EAC1EA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAErC,CAAC;AAACvB,EAAA,CApCWF,sBAAsB;EAAA,QAEhBJ,WAAW;AAAA;AAAA8B,EAAA,GAFjB1B,sBAAsB;AAsCnC,OAAO,MAAM2B,iBAAiB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACM,qBAAqB,CAAC;AAAA;AAAC6B,GAAA,CAA5DD,iBAAiB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
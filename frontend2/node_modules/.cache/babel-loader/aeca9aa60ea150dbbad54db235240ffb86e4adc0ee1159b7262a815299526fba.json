{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ram_k\\\\CodeProjects\\\\DatabaseProject-MovieManagement\\\\frontend2\\\\src\\\\components\\\\PagesJS\\\\AuthContext.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { Outlet, Link, Navigate, useNavigate } from \"react-router-dom\";\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component to wrap around your app and provide context\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  // Initialize user state as an object with default values for clarity\n  const [user, setUser] = useState({\n    id: null,\n    username: '',\n    email: '',\n    password: '',\n    joinDate: ''\n  });\n\n  // Function to set the user data after a successful login\n  const login = userData => {\n    _s();\n    // Assuming userData is an array or object with values [id, username, email, password, joinDate]\n    setUser({\n      id: userData[0][0],\n      // user ID\n      username: userData[0][1],\n      // username\n      email: userData[0][2],\n      // email\n      password: userData[0][3],\n      // password\n      joinDate: userData[0][4] // join date\n    });\n    useNavigate('/');\n  };\n\n  // Function to log out the user\n  _s(login, \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n    return [useNavigate];\n  });\n  const logout = () => {\n    setUser({\n      id: null,\n      username: '',\n      email: '',\n      password: '',\n      joinDate: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n// Named export for useAuth\n_s2(AuthProvider, \"eLxge4445ai2gJDPclWvUbDByRM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s3();\n  return useContext(AuthContext);\n};\n_s3(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","Outlet","Link","Navigate","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s2","_s","$RefreshSig$","user","setUser","id","username","email","password","joinDate","login","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s3","$RefreshReg$"],"sources":["C:/Users/Ram_k/CodeProjects/DatabaseProject-MovieManagement/frontend2/src/components/PagesJS/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\nimport { Outlet, Link, Navigate, useNavigate } from \"react-router-dom\";\r\n// Create Context\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component to wrap around your app and provide context\r\nexport const AuthProvider = ({ children }) => {\r\n  // Initialize user state as an object with default values for clarity\r\n  const [user, setUser] = useState({\r\n    id: null,\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    joinDate: ''\r\n  });\r\n\r\n  // Function to set the user data after a successful login\r\n  const login = (userData) => {\r\n    // Assuming userData is an array or object with values [id, username, email, password, joinDate]\r\n    setUser({\r\n      id: userData[0][0],          // user ID\r\n      username: userData[0][1],    // username\r\n      email: userData[0][2],       // email\r\n      password: userData[0][3],    // password\r\n      joinDate: userData[0][4],    // join date\r\n    });\r\n    useNavigate('/')\r\n  };\r\n\r\n  // Function to log out the user\r\n  const logout = () => {\r\n    setUser({\r\n      id: null,\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      joinDate: ''\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Named export for useAuth\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC5C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC;IAC/BgB,EAAE,EAAE,IAAI;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,KAAK,GAAIC,QAAQ,IAAK;IAAAV,EAAA;IAC1B;IACAG,OAAO,CAAC;MACNC,EAAE,EAAEM,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAAW;MAC7BL,QAAQ,EAAEK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAAK;MAC7BJ,KAAK,EAAEI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAAQ;MAC7BH,QAAQ,EAAEG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAAK;MAC7BF,QAAQ,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAK;IAC/B,CAAC,CAAC;IACFjB,WAAW,CAAC,GAAG,CAAC;EAClB,CAAC;;EAED;EAAAO,EAAA,CAZMS,KAAK;IAAA,QASThB,WAAW;EAAA;EAIb,MAAMkB,MAAM,GAAGA,CAAA,KAAM;IACnBR,OAAO,CAAC;MACNC,EAAE,EAAE,IAAI;MACRC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI;MAAEO,KAAK;MAAEE;IAAO,CAAE;IAAAb,QAAA,EAClDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAlB,GAAA,CAzCaF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA0CzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO/B,UAAU,CAACO,WAAW,CAAC;AAChC,CAAC;AAACwB,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}